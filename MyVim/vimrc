" This file is NOT licensed under the GPLv3.
"
" Here's the license text for this file:
"
" This is free and unencumbered software released into the public domain.
"
" Anyone is free to copy, modify, publish, use, compile, sell, or
" distribute this software, either in source code form or as a compiled
" binary, for any purpose, commercial or non-commercial, and by any
" means.
"
" In jurisdictions that recognize copyright laws, the author or authors
" of this software dedicate any and all copyright interest in the
" software to the public domain. We make this dedication for the benefit
" of the public at large and to the detriment of our heirs and
" successors. We intend this dedication to be an overt act of
" relinquishment in perpetuity of all present and future rights to this
" software under copyright law.
"
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
" IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
" OTHER DEALINGS IN THE SOFTWARE.
"
" For more information, please refer to <http://unlicense.org/>

" NB :
" Please install below.
" sudo apt install global
" sudo apt install ctags exuberant-ctags cscope cmake gcc g++
" sudo apt install python3 python3-dev
"
" Create below dirs.
" mkdir ~/.vim/undodir -p
" mkdir ~/.cache/tags -p
"
" Download plug.vim
" curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"
" Rename vimrc with dot
" and copy .vimrc to user dir (~/).

" Install all plugs inside vimrc
" :PlugInstall
"
" Compile YoucompleteMe.
" cd ~/.vim/plugged/YouCompleteMe
" python3 install.py --clang-completer
"
" Rename ycm_extra_c_cpp_conf.y with dot
" and copy .ycm_extra_c_cpp_conf.py to YCM dir.
syntax on

set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set number relativenumber
set nowrap
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set scrolloff=10
set colorcolumn=80
set noequalalways
set autochdir
highlight ColorColumn ctermbg=0 guibg=lightgrey

call plug#begin('~/.vim/plugged')

Plug 'morhetz/gruvbox'
Plug 'jremmen/vim-ripgrep'
Plug 'tpope/vim-fugitive'
Plug 'leafgarland/typescript-vim'
Plug 'vim-utils/vim-man'
Plug 'lyuts/vim-rtags'
Plug 'kien/ctrlp.vim'
Plug 'Valloric/YouCompleteMe'
Plug 'mbbill/undotree'
Plug 'yegappan/taglist'
Plug 'preservim/tagbar'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/gutentags_plus'
Plug 'christoomey/vim-tmux-navigator'
"Plug 'xolox/vim-misc'
"Plug 'xolox/vim-easytags'
call plug#end()

colorscheme gruvbox
set background=dark

if executable('rg')
    let g:rg_device_root='true'
endif

let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
" leader key is set to space bar
let mapleader=" "
let g:netrw_browse_split=2
let g:netrw_banner=0
let g:netrw_winsize=25

let g:ctrlp_use_caching=0

let g:ycm_global_ycm_extra_conf = '~/.vim/plugged/YouCompleteMe/.ycm_extra_c_cpp_conf.py'
set rtp+=~/.vim/plugged/YouCompleteMe

" enable gtags module
let g:gutentags_modules = ['ctags', 'gtags_cscope']

" config project root markers.
let g:gutentags_project_root = ['.root']

" generate datebases in my cache directory, prevent gtags files polluting my project
let g:gutentags_cache_dir = expand('~/.cache/tags')

" change focus to quickfix window after search (optional).
let g:gutentags_plus_switch = 1

" disable gutentag default mapping
let g:gutentags_plus_nomap = 1

" Movement of cursur in vim terminals
" Left
nnoremap <leader>h :wincmd h<CR>
" Down
nnoremap <leader>j :wincmd j<CR>
" Up
nnoremap <leader>k :wincmd k<CR>
" Right
nnoremap <leader>l :wincmd l<CR>

" Code browsing
" Backward
nnoremap <leader>o :wincmd o<CR>
" Forward
nnoremap <leader>[ :wincmd i<CR>
" Jump to definition
nnoremap <leader>] :wincmd ]<CR>

" open terminal from vim . Use Ctrl+w+w to switch between vim and terminal
nnoremap <leader>t :botright vertical term<CR>

" show undo tree
nnoremap <leader>u :UndotreeShow<CR>

" show dir and files
nnoremap <leader>pv :wincmd v<bar> :Ex <bar> :vertical resize 30<CR>

" ripgrep
nnoremap <leader>ps :Rg<SPACE>

" resize the vertical split window width
nnoremap <silent> <leader>+ :vertical resize +5<CR>
nnoremap <silent> <leader>- :vertical resize -5<CR>

" show functions, variables, macros in the current file
nnoremap <silent> <leader>d :TagbarToggle<CR> 

" Below are not woking with c/cpp
" nnoremap <silent> <leader>gd :YcmCompleter GoTo<CR>
" nnoremap <silent> <leader>gf :YcmCompleter FixIt<CR>

" gutentag new mapping
" Find symbol (reference) under cursor
noremap <silent> <leader>gs :GscopeFind s <C-R><C-W><cr>
" Find symbol definition under cursor
noremap <silent> <leader>gg :GscopeFind g <C-R><C-W><cr>
" Functions calling this function
noremap <silent> <leader>gc :GscopeFind c <C-R><C-W><cr>
" Find text string under cursor
noremap <silent> <leader>gt :GscopeFind t <C-R><C-W><cr>
" Find egrep pattern under cursor
noremap <silent> <leader>ge :GscopeFind e <C-R><C-W><cr>
" Find file name under cursor
noremap <silent> <leader>gf :GscopeFind f <C-R>=expand("<cfile>")<cr><cr>
" Find files #including the file name under cursor
noremap <silent> <leader>gi :GscopeFind i <C-R>=expand("<cfile>")<cr><cr>
" Functions called by this function
noremap <silent> <leader>gd :GscopeFind d <C-R><C-W><cr>
" Find places where current symbol is assigned
noremap <silent> <leader>ga :GscopeFind a <C-R><C-W><cr>
" Find current word in ctags database
noremap <silent> <leader>gz :GscopeFind z <C-R><C-W><cr>

